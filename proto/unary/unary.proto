syntax = "proto3";

option go_package = "github.com/ppzxc/go-grpc-examples-benchmark/proto/unary";

package ppzxc.grpc.unary;

// UnaryRequest is the request for basic.
message UnaryRequest {
  uint64 uid = 1;
  bytes message = 2;
  int32 len = 3;
  int32 connNumber = 4;
  int32 workerNumber = 5;
}

// UnaryResponse is the response for basic.
message UnaryResponse {
  uint64 uid = 1;
  bytes message = 2;
  int32 len = 3;
  int32 connNumber = 4;
  int32 workerNumber = 5;
}

// UnaryExample is the example for unary.
service UnaryExample {
  rpc UnaryEcho(UnaryRequest) returns (UnaryResponse) {}
//  rpc ClientStream(stream UnaryRequest) returns (UnaryResponse) {}
//  rpc ServerStream(UnaryRequest) returns (stream UnaryResponse) {}
//  rpc BiStream(stream UnaryRequest) returns (stream UnaryResponse) {}
}